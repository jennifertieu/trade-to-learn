import Head from "next/head";
import Image from "next/image";
import PortfolioCard from "@/components/PortfolioCard";
import { useState, useEffect } from "react";
import Trade from "@/components/Trade";
import dynamic from "next/dynamic";
import { stockData } from "../data/stockDataExample";
import PortfolioProps from "@/interfaces/PortfolioProps";
import Table from "@/components/Table";
const SymbolOverviewNoSSR = dynamic(
  () => import("react-ts-tradingview-widgets").then((w) => w.SymbolOverview),
  {
    ssr: false,
  }
);

export default function Home({ portfolio, updatePortfolio }: PortfolioProps) {
  const [stockDailyData, setStockDailyData] = useState(stockData);

  const stockQuoteColumns = ["Name", "Ticker", "Price", "Day Change"];
  // useEffect(() => {
  //   const fetchData = async() => {
  //     const response = await fetch("/api/open-close");
  //     const data = await response.json();
  //     setStockDailyData(data);
  //   }
  //   fetchData();
  // }, [])

  return (
    <>
      <Head>
        <title>Trade To Learn</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section>
        <h1 className="text-3xl font-bold">Stocks</h1>
        <p className="text-sm text-neutral-500 dark:text-neutral-300">
          Trading Common Stocks
        </p>
      </section>
      <section className="flex flex-col gap-4 mt-4 lg:flex-row">
        <section className="flex flex-col gap-4 grow">
          <PortfolioCard
            portfolio={portfolio}
            updatePortfolio={updatePortfolio}
          />
          <article className="p-4 rounded-lg overflow-auto border border-neutral-400 dark:bg-neutral-800 dark:border-0">
            <h2 className="text-lg">Quotes</h2>
            <Table
              tableData={stockData}
              tableColumns={stockQuoteColumns}
              tableRenderRow={(data) => {
                if (data === undefined) {
                  return (
                    <>
                      <td colSpan={stockQuoteColumns.length}>
                        No data available
                      </td>
                    </>
                  );
                }
                return (
                  <>
                    <td>{data["name"]}</td>
                    <td>{data["ticker"]}</td>
                    <td>
                      {data["price"].toLocaleString("en-US", {
                        style: "currency",
                        currency: "USD",
                      })}
                    </td>
                    <td className="text-green-700 dark:text-green-400">
                      {(100 / 100).toLocaleString("en-US", {
                        style: "percent",
                        minimumFractionDigits: 2,
                      })}
                    </td>
                  </>
                );
              }}
            />
          </article>
        </section>
        <Trade
          portfolio={portfolio}
          updatePortfolio={updatePortfolio}
          tradeQuoteData={stockData.map(({ name, ticker, price }) => ({
            name,
            ticker,
            price,
          }))}
        />
      </section>
    </>
  );
}
